package concept;

public class Object_Class {
}
/*
 * 3. Object 클래스
 * 
 * 		- 클래스를 선언할 때, extends 키워드로 다른 클래스를 상속하지 않으면
 * 			암시적으로 java.lang.Object 클래스를 상속하게 된다
 * 
 * 			따라서, 자바의 모든 클래스는 Object 클래스의 자식 or 자손 클래스다
 * 			즉, Object 클래스는 자바의 최상위 부모 클래스란 의미다
 * 
 * 		- Object 클래스는 필드가 없고, 메소드들로 구성되어 있다
 * 
 * 			이 메소드들은 모든 클래스가 Object를 상속하기 때문에
 * 			모든 클래스에서 사용 가능하다
 * 
 * 
 * 	3-1. 객체 비교: equals(), ==
 *		- 둘 다 양쪽에 있는 내용을 비교한 값을 boolean 타입으로 변환한다
 *		
 *		차이점 1) 형태의 차이
 *			equals() -> 메소드, 양쪽의 객체를 비교
 *			== -------> 연산자, 좌우항의 값을 비교
 *
 *		차이점 2) 비교 방식의 차이
 *			equals(): 비교하고자하는 '대상의 내용 자체를 비교'
 *			== 		: 비교하고자하는 대상의 '주소값을 비교'
 *
 * 	ex) ex01_MemberEx
 * 
 * 	3-2. 객체 해시코드: hashCode()
 * 		- 객체를 식별할 하나의 정수값
 * 			-> 해시 알고리즘에 의해 생성된 정수값을 반환
 * 		- 객체의 메모리 번지를 이용해서 해시코드를 만들어 리턴하기 때문에
 * 			객체마다 다른 값을 가지고 있다
 * 			
 * 		=> 해시 알고리즘이란?
 * 			 해시: 임의의 크기를 가진 데이터를 고정된 데이터의 크기로 변환시키는 것
 * 			
 * 			즉, 해시 알고리즘은 해시를 하는 방법에 대해 절차적으로 명세한다
 * 				이를 이용해 특정한 배열의 인덱스나 위치나 위치를 입력하고자 하는
 * 				데이터의 값을 이용해 저장하거나 찾을 수 있다
 * 
 * 				기존에 사용했던 자료 구조들은 탐색이나 삽입에 선형시간이 걸리기도 했던 것에 비해
 * 				해시를 이용하면 즉시 저장하거나 찾고자 하는 
 * 				위치를 참조할 수 있으므로 더욱 빠른 속도로 처리할 수 있다
 * 
 * 		=> 해시 알고리즘 작동 원리
 * 			순차적 탐색(Direct Addressing Table)은 
 * 			배열의 제일 첫 번째칸부터 순차적으로 값을 
 * 
 * 	ex) ex02_hashCode
 * 
 * 	3-3. 객체 문자 정보: toString()
 * 		- 객체를 문자열로 표현한 값
 * 
 * 		- 기본적으로 Object 클래스의 toString() 메소드는,
 * 			"클래스명@16진수해시코드"로 구성된 문자 정보를 리턴한다
 * 
 *		- Object 하위 클래스는 toString() 메소드를 재정의하여 간결하고
 *			유익한 정보를 리턴하도록 되어 있다
 *			
 *			예를 들어, java.util 패키지의 Date 클래스는 
 *			toString() 메소드를 재정의하여
 *			현재 시스템의 날짜와 시간 정보를 리턴한다
 * 	
 * 	ex) ex03_toString
 * 
 * 	3-4. 객체 복제: clone()
 * 		- 원본 객체의 필드값과 동일한 값을 가지는 새로운 객체를 생성하는 것을 말한다
 * 
 * 		a. 얕은 복제: thin clone
 * 			-> 참조 타입 필드는 주소값만 복제됨
 * 			
 * 
 * 		b. 깊은 복제: deep clone
 * 			-> 참조하고 있는 객체도 복제하는 것
 */
